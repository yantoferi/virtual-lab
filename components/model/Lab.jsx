/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 /home/TA/resource/Lab.glb --shadows 
*/

import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export function Labs(props) {
  const { nodes, materials } = useGLTF('models/Lab-transformed.glb')
  useFrame(() => {
    // 
  }, 5)
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Lab.geometry} material={materials['Plaster labs']} position={[0, 0.5, 0]} />
      <mesh castShadow receiveShadow geometry={nodes['Lab-top'].geometry} material={materials['Plaster labs top']} position={[1.195, 4.4, 0]} />
      <mesh castShadow receiveShadow geometry={nodes.Lab_small.geometry} material={materials['Plaster labs']} position={[0, 5, -32.4]} />
      <mesh castShadow receiveShadow geometry={nodes['Lab-top_small'].geometry} material={materials['Plaster labs top']} position={[1.195, 8.9, -32.4]} />
      <mesh castShadow receiveShadow geometry={nodes.Lab001.geometry} material={materials['Plaster labs']} position={[0, 5, 0]} />
      <mesh castShadow receiveShadow geometry={nodes['Lab-top001'].geometry} material={materials['Plaster labs top']} position={[1.195, 8.9, 0]} />
      <mesh castShadow receiveShadow geometry={nodes.Lab002.geometry} material={materials['Plaster labs']} position={[0, 9.5, 0]} />
      <mesh castShadow receiveShadow geometry={nodes['Lab-top002'].geometry} material={materials['Plaster labs top']} position={[1.195, 13.4, 0]} />
      <mesh castShadow receiveShadow geometry={nodes.Lab003.geometry} material={materials['Plaster labs']} position={[21.713, 9.5, -30.368]} rotation={[Math.PI, 0, Math.PI]} />
      <mesh castShadow receiveShadow geometry={nodes['Lab-top003'].geometry} material={materials['Plaster labs top']} position={[20.517, 13.4, -30.368]} rotation={[Math.PI, 0, Math.PI]} />
      <mesh castShadow receiveShadow geometry={nodes.Lab004.geometry} material={materials['Plaster labs']} position={[21.713, 5, -30.368]} rotation={[Math.PI, 0, Math.PI]} />
      <mesh castShadow receiveShadow geometry={nodes['Lab-top004'].geometry} material={materials['Plaster labs top']} position={[20.517, 8.9, -30.368]} rotation={[Math.PI, 0, Math.PI]} />
      <mesh castShadow receiveShadow geometry={nodes.Lab005.geometry} material={materials['Plaster labs']} position={[21.713, 0.5, -30.368]} rotation={[Math.PI, 0, Math.PI]} />
      <mesh castShadow receiveShadow geometry={nodes['Lab-top005'].geometry} material={materials['Plaster labs top']} position={[20.517, 4.4, -30.368]} rotation={[Math.PI, 0, Math.PI]} />
      <mesh castShadow receiveShadow geometry={nodes.Lab_small001.geometry} material={materials['Plaster labs']} position={[0, 9.5, -32.4]} />
      <mesh castShadow receiveShadow geometry={nodes['Lab-top_small001'].geometry} material={materials['Plaster labs top']} position={[1.195, 13.4, -32.4]} />
      <mesh castShadow receiveShadow geometry={nodes.Lab_small002.geometry} material={materials['Plaster labs']} position={[21.713, 5, 2.032]} rotation={[Math.PI, 0, Math.PI]} />
      <mesh castShadow receiveShadow geometry={nodes['Lab-top_small002'].geometry} material={materials['Plaster labs top']} position={[20.517, 8.9, 2.032]} rotation={[Math.PI, 0, Math.PI]} />
      <mesh castShadow receiveShadow geometry={nodes.Lab_small003.geometry} material={materials['Plaster labs']} position={[21.713, 9.5, 2.032]} rotation={[Math.PI, 0, Math.PI]} />
      <mesh castShadow receiveShadow geometry={nodes['Lab-top_small003'].geometry} material={materials['Plaster labs top']} position={[20.517, 13.4, 2.032]} rotation={[Math.PI, 0, Math.PI]} />
    </group>
  )
}

useGLTF.preload('models/Lab-transformed.glb')
