/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 /home/TA/resource/Lab.glb --shadows --keepgroups 
*/

import dynamic from "next/dynamic"
import { Text, useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { CuboidCollider, RigidBody } from '@react-three/rapier'

const RoomLight = dynamic(() => import('../lighting/light').then(mod => mod.RoomLight), { ssr: false })

export function Labs(props) {
  const { nodes, materials } = useGLTF('models/Lab-transformed.glb')
  useFrame(() => {
    // 
  }, 4)
  return (
    <group {...props} dispose={null}>
      {bigLabPos.map((bigLab, id) => (
        <group key={id} position={[...bigLab.position]} rotation={[...bigLab.rotation]}>
          <RigidBody colliders={false} type='fixed'>
            <mesh castShadow receiveShadow geometry={nodes.Lab.geometry} material={materials['Plaster labs']} />
            <CuboidCollider args={[0.6, 2, 5.8]} position={[4.2, 2, 0]} />
            <CuboidCollider args={[0.2, 2, 8]} position={[-4.6, 2, 0]} />
            <CuboidCollider args={[5, 2, 0.2]} position={[0, 2, 8]} />
            <CuboidCollider args={[5, 2, 0.2]} position={[0, 2, -8]} />
          </RigidBody>
          <mesh castShadow receiveShadow geometry={nodes['Lab-top'].geometry} material={materials['Plaster labs top']} position={[-0.092, 4.15, 0]} />
          <RoomLight intensity={20} position-y={3.7} scale={0.2} distance={15} decay={1.7} />
          <Text color='yellow' rotation-y={Math.PI / 2} position={[5.2, 2, 0]} scale={0.3}>{bigLab.name}</Text>
        </group>
      ))}
      {smallLabPos.map((smallLab, id) => (
        <group key={id} position={[...smallLab.position]} rotation={[...smallLab.rotation]}>
          <RigidBody colliders={false} type='fixed'>
            <mesh castShadow receiveShadow geometry={nodes.Lab_small.geometry} material={materials['Plaster lab small']} />
            <CuboidCollider args={[0.6, 2, 5.8]} position={[4.2, 2, 0]} />
            <CuboidCollider args={[0.2, 2, 8]} position={[-4.6, 2, 0]} />
            <CuboidCollider args={[5, 2, 0.2]} position={[0, 2, 8]} />
            <CuboidCollider args={[5, 2, 0.2]} position={[0, 2, -8]} />
            <CuboidCollider args={[5, 2, 0.2]} position={[0, 2, 0]} />
          </RigidBody>
          <mesh castShadow receiveShadow geometry={nodes['Lab-top_small'].geometry} material={materials['Plaster lab small top']} position={[-0.092, 4.15, 0]} />
          <RoomLight intensity={15} position={[0, 3.7, -4]} scale={0.2} distance={15} />
          <RoomLight intensity={15} position={[0, 3.7, 4]} scale={0.2} distance={15} />
          {smallLab.name.map((name, id) => (
            <Text key={id} color='yellow' rotation-y={Math.PI / 2} position={[5.2, 2, id===0?-3:3]} scale={0.3}>{name}</Text>
          ))}
        </group>
      ))}
    </group>
  )
}

useGLTF.preload('models/Lab-transformed.glb')

const bigLabPos = [
  {
    name: 'Workshop C',
    position: [0, 0.5, 0],
    rotation: [0, 0, 0],
  },
  {
    name: 'Lab Assembly',
    position: [0, 0.5, -16.2002],
    rotation: [0, 0, 0],
  },
  {
    name: 'Lab Civil',
    position: [0, 0.5, -32.397],
    rotation: [0, 0, 0],
  },
  //
  {
    name: 'Lab Kimia',
    position: [0, 5, 0],
    rotation: [0, 0, 0],
  },
  {
    name: 'Lab Fisika',
    position: [0, 5, -16.2002],
    rotation: [0, 0, 0],
  },
  //
  {
    name: 'R. kuliah Umum',
    position: [0, 9.5, 0],
    rotation: [0, 0, 0],
  },
  {
    name: 'R. kuliah Umum',
    position: [0, 9.5, -16.2002],
    rotation: [0, 0, 0],
  },
  //
  {
    name: 'Instrumen & Electronic',
    position: [21.7127, 0.5, 1.98262],
    rotation: [0, -Math.PI, 0],
  },
  {
    name: 'Workshop A',
    position: [21.7127, 0.5, -14.2114],
    rotation: [0, -Math.PI, 0],
  },
  {
    name: 'Maritim',
    position: [21.7127, 0.5, -30.4116],
    rotation: [0, -Math.PI, 0],
  },
  //
  {
    name: 'Labkom A',
    position: [21.7127, 5, 1.98262],
    rotation: [0, -Math.PI, 0],
  },
  {
    name: 'Lab Desain',
    position: [21.7127, 5, -14.2114],
    rotation: [0, -Math.PI, 0],
  },
  //
  {
    name: 'Labkom B',
    position: [21.7127, 9.5, 1.98262],
    rotation: [0, -Math.PI, 0],
  },
  {
    name: 'Labkom C',
    position: [21.7127, 9.5, -14.2114],
    rotation: [0, -Math.PI, 0],
  },
]

const smallLabPos = [
  {
    name: ['R. Asleb B', 'R. Asleb A'],
    position: [0, 5, -32.4005],
    rotation: [0, 0, 0],
  },
  {
    name: ['Labkom', 'R. Kuliah Umum'],
    position: [0, 9.5, -32.4005],
    rotation: [0, 0, 0],
  },

  {
    name: ['Lab Bioprocess', 'Lab Industri'],
    position: [21.7127, 5, -30.4185],
    rotation: [0, -Math.PI, 0],
  },
  {
    name: ['Labkom D', 'Labkom E'],
    position: [21.7127, 9.5, -30.4185],
    rotation: [0, -Math.PI, 0],
  },
]