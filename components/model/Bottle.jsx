"use client"

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 C:/Users/labkom pc/Downloads/small_bottle.glb --transform --shadows 
Files: C:/Users/labkom pc/Downloads/small_bottle.glb [41.5MB] > small_bottle-transformed.glb [1.13MB] (97%)
Author: shuvalov.di (https://sketchfab.com/shuvalov.di)
License: CC-BY-NC-SA-4.0 (http://creativecommons.org/licenses/by-nc-sa/4.0/)
Source: https://sketchfab.com/3d-models/small-bottle-761e522abb934b0a98063a9851728180
Title: Small bottle
*/

import { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { RigidBody } from '@react-three/rapier'
import { Interactive } from '@react-three/xr'
import { toast } from 'react-toastify'

export function Bottle(props) {
  const bottleRef = useRef(null)

  const { nodes, materials } = useGLTF('models/small_bottle-transformed.glb')
  return (
    <group {...props} dispose={null}>
      <Interactive onSelect={xrEvent => {
        const obj = xrEvent.intersection?.object.parent
        const index = xrEvent.target.index
        props.getObject(obj, index)
      }}>
        <RigidBody ref={bottleRef} colliders="cuboid" type={props.dynamic ? "dynamic" : "kinematicPosition"} position={[0, 0.2, 0.3]} userData={{ type: 'rigid_parent' }}>
          <mesh castShadow receiveShadow geometry={nodes.Sklianka__0.geometry} material={materials['Scene_-_Root']} position={[0, 0.088, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={0.4}
          onClick={event => {
            if (event.distance <= 0.7) props.getObject(event.eventObject.parent)
          }}
          onPointerEnter={event => {
            if (props.objectId === '' && (event.distance <= 0.7)) toast.info('Klik kiri untuk ambil benda', {autoClose: 1000})
          }} />
        </RigidBody>
      </Interactive>
    </group>
  )
}

useGLTF.preload('models/small_bottle-transformed.glb')
