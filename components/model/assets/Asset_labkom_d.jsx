/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 /home/TA/resource/Laboratory/Asset_labkom_d.glb --transform --shadows --keepgroups 
Files: /home/TA/resource/Laboratory/Asset_labkom_d.glb [68.72MB] > Asset_labkom_d-transformed.glb [10.83MB] (84%)
*/

import { useState, useEffect } from 'react'
import { useGLTF, useVideoTexture } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { RigidBody } from '@react-three/rapier'

export function LabkomD(props) {
  const { nodes, materials } = useGLTF('models/Asset_labkom_d-transformed.glb')

  const [idVideo, setIdVideo] = useState(1)

  const vidTexture = useVideoTexture(`/videos/video_${idVideo}.mp4`)

  useEffect(() => {
    console.log('rendered')
  }, [])

  const changeVideo = (event) => {
    if (idVideo === 4) {
      setIdVideo(1)
      return;
    }
    setIdVideo(idVideo + 1)
  }

  useFrame(() => {
    // 
  }, 5)
  return (
    <group {...props} dispose={null}>
      <group>
        <group position={[25.899, 9.5, -34.34]} rotation={[0, -Math.PI / 2, 0]}>
          <mesh castShadow receiveShadow geometry={nodes.Cube026.geometry} material={materials['Persian walnut PBR texture seamless.003']} />
          <mesh castShadow receiveShadow geometry={nodes.Cube026_1.geometry} material={materials['Persian walnut PBR texture seamless.002']} />
          <mesh castShadow receiveShadow geometry={nodes.Cube026_2.geometry} material={materials.PaletteMaterial002} />
          <mesh castShadow receiveShadow geometry={nodes.Cube026_3.geometry} material={materials.PaletteMaterial001} />
        </group>
        {tablePosition.map((table, id) => (
          <RigidBody key={id} colliders='cuboid' type='fixed' position={[...table.position]} rotation={[0, Math.PI / 2, 0]}>
            <group>
              <mesh castShadow receiveShadow geometry={nodes.Kostka004.geometry} material={materials['Desk wood']} />
              <mesh castShadow receiveShadow geometry={nodes.Kostka004_1.geometry} material={materials['Frozen white metal']} />
            </group>
          </RigidBody>
        ))}
        <mesh castShadow receiveShadow geometry={nodes.Office_Chair_REX.geometry} material={materials['Office Chair_Fabric']} position={[25.134, 9.5, -37.415]} rotation={[0, -Math.PI / 2, 0]} />
        <group position={[18.091, 9.5, -33.376]} rotation={[0, Math.PI / 2, 0]} scale={1.641}>
          <RigidBody colliders='cuboid' type='fixed'>
            <mesh castShadow receiveShadow geometry={nodes.Cube027.geometry} material={materials.tv_wood} />
          </RigidBody>
          <mesh castShadow receiveShadow geometry={nodes.Cube027_1.geometry} material={materials.PaletteMaterial003} />
          <mesh castShadow receiveShadow geometry={nodes.Cube027_2.geometry} material={materials.PaletteMaterial004} />
          <mesh castShadow receiveShadow geometry={nodes.Cube027_3.geometry} material={materials.PaletteMaterial005} />
        </group>
        <group position={[24.284, 10.47, -37.505]} scale={0.844}>
          <mesh castShadow receiveShadow geometry={nodes.Untitled002.geometry} material={materials.PaletteMaterial006} />
          <mesh castShadow receiveShadow geometry={nodes.Untitled002_1.geometry} material={materials['display.002']} />
          <mesh castShadow receiveShadow geometry={nodes.Untitled002_2.geometry}>
            <meshStandardMaterial map={vidTexture} />
          </mesh>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('models/Asset_labkom_d-transformed.glb')


const tablePosition = [
  {
    position: [24.3923, 9.5, -37.634],
    rotation: [0, Math.PI / 2, 0]
  },
  {
    position: [25.5748, 9.5, -32.6885],
    rotation: [0, Math.PI / 2, 0]
  },

  {
    position: [22.5903, 9.5, -37.634],
    rotation: [0, Math.PI / 2, 0]
  },
  {
    position: [22.5903, 9.5, -32.6885],
    rotation: [0, Math.PI / 2, 0]
  },

  {
    position: [20.7883, 9.5, -37.634],
    rotation: [0, Math.PI / 2, 0]
  },
  {
    position: [20.7883, 9.5, -32.6885],
    rotation: [0, Math.PI / 2, 0]
  },
]