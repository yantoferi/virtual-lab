/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 /home/TA/resource/Laboratory/Asset_labkom_d.glb --transform --shadows 
Files: /home/TA/resource/Laboratory/Asset_labkom_d.glb [51.44MB] > Asset_labkom_d-transformed.glb [9.48MB] (82%)
*/

import { useState } from 'react'
import { useGLTF, useVideoTexture } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export function LabkomD(props) {
  const { nodes, materials } = useGLTF('models/Asset_labkom_d-transformed.glb')

  const [idVideo, setIdVideo] = useState(1)

  const vidTexture = useVideoTexture(`/videos/video_${idVideo}.mp4`, { loop: true })

  const changeVideo = (event) => {
    if (idVideo === 4) {
      setIdVideo(1)
      return;
    }
    setIdVideo(idVideo + 1)
  }
  useFrame(() => {
    // 
  }, 27)
  return (
    <group {...props} dispose={null}>
      <group position={[25.899, 9.5, -34.34]} rotation={[0, -Math.PI / 2, 0]}>
        <mesh castShadow receiveShadow geometry={nodes.Cube026.geometry} material={materials['Persian walnut PBR texture seamless.003']} />
        <mesh castShadow receiveShadow geometry={nodes.Cube026_1.geometry} material={materials['Persian walnut PBR texture seamless.002']} />
        <mesh castShadow receiveShadow geometry={nodes.Cube026_2.geometry} material={materials.PaletteMaterial002} />
        <mesh castShadow receiveShadow geometry={nodes.Cube026_3.geometry} material={materials.PaletteMaterial001} />
      </group>
      <group position={[24.833, 9.5, -37.634]} rotation={[0, Math.PI / 2, 0]}>
        <mesh castShadow receiveShadow geometry={nodes.Kostka004.geometry} material={materials['Desk wood']} />
        <mesh castShadow receiveShadow geometry={nodes.Kostka004_1.geometry} material={materials['Frozen white metal']} />
      </group>
      <group position={[18.091, 9.5, -33.376]} rotation={[0, Math.PI / 2, 0]} scale={1.641}>
        <mesh castShadow receiveShadow geometry={nodes.Cube027.geometry} material={materials.tv_wood} />
        <mesh castShadow receiveShadow geometry={nodes.Cube027_1.geometry} material={materials.PaletteMaterial003} />
        <mesh castShadow receiveShadow geometry={nodes.Cube027_2.geometry} material={materials.PaletteMaterial004} />
        <mesh castShadow receiveShadow geometry={nodes.Cube027_3.geometry} material={materials.PaletteMaterial005} />
      </group>
      <group position={[24.725, 10.47, -37.505]} scale={0.844}>
        <mesh castShadow receiveShadow geometry={nodes.Untitled002.geometry} material={materials.PaletteMaterial006} />
        <mesh castShadow receiveShadow geometry={nodes.Untitled002_1.geometry} material={materials['display.002']} />
        <mesh castShadow receiveShadow geometry={nodes.Untitled002_2.geometry}
          onPointerEnter={event => {
            if (event.distance <= 1.5) toast.info('Klik untuk mengubah video', { autoClose: 1000 })
          }}
          onClick={changeVideo}
        >
          <meshStandardMaterial map={vidTexture} />
        </mesh>
      </group>
      <mesh castShadow receiveShadow geometry={nodes.Button.geometry} material={materials.Office_Plastic_Mat} position={[25.702, 9.5, -37.415]} rotation={[0, -Math.PI / 2, 0]} scale={1.016} />
      <mesh castShadow receiveShadow geometry={nodes.Chair_Back.geometry} material={materials.Office_Fabric_Mat} position={[25.702, 9.5, -37.415]} rotation={[0, -Math.PI / 2, 0]} scale={1.016} />
      <mesh castShadow receiveShadow geometry={nodes.Chair_Wheel.geometry} material={materials.PaletteMaterial007} position={[25.702, 9.5, -37.415]} rotation={[0, -Math.PI / 2, 0]} scale={1.016} />
    </group>
  )
}

useGLTF.preload('models/Asset_labkom_d-transformed.glb')
