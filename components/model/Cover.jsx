/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 /home/TA/resource/Laboratory/Cover.glb --shadows 
*/

import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export function Cover(props) {
  const { nodes, materials } = useGLTF('models/Cover-transformed.glb')
  useFrame(() => {
    // 
  }, 2)
  return (
    <group {...props} dispose={null}>
      <group position={[15.218, 0.25, -44.201]}>
        <mesh receiveShadow geometry={nodes.Plane010.geometry} material={materials['Black glass']} />
        <mesh castShadow receiveShadow geometry={nodes.Plane010_1.geometry} material={materials['Plaster wall cover']} />
      </group>
      <group position={[22.17, 0.25, 21.806]} rotation={[0, -Math.PI / 2, 0]}>
        <mesh receiveShadow geometry={nodes.Plane015.geometry} material={materials['Black glass']} />
        <mesh castShadow receiveShadow geometry={nodes.Plane015_1.geometry} material={materials['Plaster wall cover']} />
      </group>
      <group position={[-1.973, 4.5, 11.12]}>
        <mesh castShadow receiveShadow geometry={nodes.Plane016.geometry} material={materials['Plaster wall cover']} />
        <mesh receiveShadow geometry={nodes.Plane016_1.geometry} material={materials['Black glass']} />
      </group>
      <group position={[-8.348, 8.75, 29.676]}>
        <mesh castShadow receiveShadow geometry={nodes.Plane003.geometry} material={materials['Plaster wall cover']} />
        <mesh receiveShadow geometry={nodes.Plane003_1.geometry} material={materials['Black glass']} />
      </group>
    </group>
  )
}

useGLTF.preload('models/Cover-transformed.glb')
